use bril_rs::{Function, Instruction, Position, Program};

struct Collector{
    //Map from pointer base address to count
    total_counter: FxHashMap<usize, i32>;
    //Counters for this function
    curr_counter: FxHashMap<usize, i32>
}


impl Default for Collector{
    
}


/*
Ok so this is the workflow:

For each function,

    Save the existing counter map as M0

    Right after it is called, for each pointer argument increment the counter

    for each instruction in function:
        Initialize the counter to 1 for address A right after executing alloc
        If it is id or ptrAdd, increment the counter of the base address.

    Right before a function exits, reset to M0. For every address 
*/
